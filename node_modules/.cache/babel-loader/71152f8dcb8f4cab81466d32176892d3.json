{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Documents\\\\GitHub\\\\CalcApp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport NumButton from \"./NumButton\";\nimport OperationButton from \"./OperationButton\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\"\n};\n\nfunction reducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          currentOperand: payload.digit,\n          overwrite: false\n        };\n      }\n\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n\n      return { ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`\n      };\n\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n\n      if (state.currentOperand == null) {\n        return { ...state,\n          operation: payload.operation\n        };\n      }\n\n      if (state.previousOperand == null) {\n        return { ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      };\n\n    case ACTIONS.CLEAR:\n      return {};\n\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return { ...state,\n          overwrite: false,\n          currentOperand: null\n        };\n      }\n\n      if (state.currentOperand == null) return state;\n\n      if (state.currentOperand.length === 1) {\n        return { ...state,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        currentOperand: state.currentOperand.slice(0, -1)\n      };\n\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null) {\n        return state;\n      }\n\n      return { ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      };\n  }\n}\n\nfunction evaluate(_ref2) {\n  let {\n    currentOperand,\n    previousOperand,\n    operation\n  } = _ref2;\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand);\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = \"\";\n\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n\n    case \"-\":\n      computation = prev - current;\n      break;\n\n    case \"*\":\n      computation = prev * current;\n      break;\n\n    case \"รท\":\n      computation = prev / current;\n      break;\n  }\n\n  return computation.toString();\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0\n});\n\nfunction formatOperand(operand) {\n  if (operand == null) return;\n  const [integer, decimal] = operand.split(\".\");\n  if (decimal == null) return INTEGER_FORMATTER.format(integer);\n  return `${INTEGER_FORMATTER.format(integer)}.${decimal}`;\n}\n\nfunction App() {\n  _s();\n\n  const [{\n    currentOperand,\n    previousOperand,\n    operation\n  }, dispatch] = useReducer(reducer, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previous-operand\",\n        children: [formatOperand(previousOperand), \" \", operation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-operand\",\n        children: formatOperand(currentOperand)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.CLEAR\n      }),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: ACTIONS.DELETE_DIGIT\n      }),\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"\\xF7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumButton, {\n      digit: \"1\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumButton, {\n      digit: \"2\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumButton, {\n      digit: \"3\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"*\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumButton, {\n      digit: \"4\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumButton, {\n      digit: \"5\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumButton, {\n      digit: \"6\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"+\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumButton, {\n      digit: \"7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumButton, {\n      digit: \"8\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumButton, {\n      digit: \"9\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"-\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumButton, {\n      digit: \".\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NumButton, {\n      digit: \"0\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.EVALUATE\n      }),\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U3IK2u6L5w8LChD4hEs3C1yVO5M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ryan/Documents/GitHub/CalcApp/src/App.js"],"names":["useReducer","NumButton","OperationButton","ACTIONS","ADD_DIGIT","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","type","payload","overwrite","currentOperand","digit","includes","previousOperand","operation","evaluate","length","slice","prev","parseFloat","current","isNaN","computation","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","integer","decimal","split","format","App","dispatch"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\"\r\nimport NumButton from \"./NumButton\"\r\nimport OperationButton from \"./OperationButton\"\r\nimport \"./styles.css\"\r\n\r\nexport const ACTIONS = {\r\n  ADD_DIGIT: \"add-digit\",\r\n  CHOOSE_OPERATION: \"choose-operation\",\r\n  CLEAR: \"clear\",\r\n  DELETE_DIGIT: \"delete-digit\",\r\n  EVALUATE: \"evaluate\",\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case ACTIONS.ADD_DIGIT:\r\n      if (state.overwrite) {\r\n        return {\r\n          ...state,\r\n          currentOperand: payload.digit,\r\n          overwrite: false,\r\n        }\r\n      }\r\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\r\n        return state\r\n      }\r\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\r\n        return state\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\r\n      }\r\n    case ACTIONS.CHOOSE_OPERATION:\r\n      if (state.currentOperand == null && state.previousOperand == null) {\r\n        return state\r\n      }\r\n\r\n      if (state.currentOperand == null) {\r\n        return {\r\n          ...state,\r\n          operation: payload.operation,\r\n        }\r\n      }\r\n\r\n      if (state.previousOperand == null) {\r\n        return {\r\n          ...state,\r\n          operation: payload.operation,\r\n          previousOperand: state.currentOperand,\r\n          currentOperand: null,\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        previousOperand: evaluate(state),\r\n        operation: payload.operation,\r\n        currentOperand: null,\r\n      }\r\n    case ACTIONS.CLEAR:\r\n      return {}\r\n    case ACTIONS.DELETE_DIGIT:\r\n      if (state.overwrite) {\r\n        return {\r\n          ...state,\r\n          overwrite: false,\r\n          currentOperand: null,\r\n        }\r\n      }\r\n      if (state.currentOperand == null) return state\r\n      if (state.currentOperand.length === 1) {\r\n        return { ...state, currentOperand: null }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        currentOperand: state.currentOperand.slice(0, -1),\r\n      }\r\n    case ACTIONS.EVALUATE:\r\n      if (\r\n        state.operation == null ||\r\n        state.currentOperand == null ||\r\n        state.previousOperand == null\r\n      ) {\r\n        return state\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        overwrite: true,\r\n        previousOperand: null,\r\n        operation: null,\r\n        currentOperand: evaluate(state),\r\n      }\r\n  }\r\n}\r\n\r\nfunction evaluate({ currentOperand, previousOperand, operation }) {\r\n  const prev = parseFloat(previousOperand)\r\n  const current = parseFloat(currentOperand)\r\n  if (isNaN(prev) || isNaN(current)) return \"\"\r\n  let computation = \"\"\r\n  switch (operation) {\r\n    case \"+\":\r\n      computation = prev + current\r\n      break\r\n    case \"-\":\r\n      computation = prev - current\r\n      break\r\n    case \"*\":\r\n      computation = prev * current\r\n      break\r\n    case \"รท\":\r\n      computation = prev / current\r\n      break\r\n  }\r\n\r\n  return computation.toString()\r\n}\r\n\r\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\r\n  maximumFractionDigits: 0,\r\n})\r\nfunction formatOperand(operand) {\r\n  if (operand == null) return\r\n  const [integer, decimal] = operand.split(\".\")\r\n  if (decimal == null) return INTEGER_FORMATTER.format(integer)\r\n  return `${INTEGER_FORMATTER.format(integer)}.${decimal}`\r\n}\r\n\r\nfunction App() {\r\n  const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(\r\n    reducer,\r\n    {}\r\n  )\r\n\r\n  return (\r\n    <div className=\"calculator-grid\">\r\n      <div className=\"output\">\r\n        <div className=\"previous-operand\">\r\n          {formatOperand(previousOperand)} {operation}\r\n        </div>\r\n        <div className=\"current-operand\">{formatOperand(currentOperand)}</div>\r\n      </div>\r\n      <button\r\n        className=\"span-two\"\r\n        onClick={() => dispatch({ type: ACTIONS.CLEAR })}\r\n      >\r\n        AC\r\n      </button>\r\n      <button onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}>\r\n        DEL\r\n      </button>\r\n      <OperationButton operation=\"รท\" dispatch={dispatch} />\r\n      <NumButton digit=\"1\" dispatch={dispatch} />\r\n      <NumButton digit=\"2\" dispatch={dispatch} />\r\n      <NumButton digit=\"3\" dispatch={dispatch} />\r\n      <OperationButton operation=\"*\" dispatch={dispatch} />\r\n      <NumButton digit=\"4\" dispatch={dispatch} />\r\n      <NumButton digit=\"5\" dispatch={dispatch} />\r\n      <NumButton digit=\"6\" dispatch={dispatch} />\r\n      <OperationButton operation=\"+\" dispatch={dispatch} />\r\n      <NumButton digit=\"7\" dispatch={dispatch} />\r\n      <NumButton digit=\"8\" dispatch={dispatch} />\r\n      <NumButton digit=\"9\" dispatch={dispatch} />\r\n      <OperationButton operation=\"-\" dispatch={dispatch} />\r\n      <NumButton digit=\".\" dispatch={dispatch} />\r\n      <NumButton digit=\"0\" dispatch={dispatch} />\r\n      <button\r\n        className=\"span-two\"\r\n        onClick={() => dispatch({ type: ACTIONS.EVALUATE })}\r\n      >\r\n        =\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}